{"version":3,"file":"UrlUtils.js","sources":["../../../../../../node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs"],"sourcesContent":["/*! @azure/msal-common v14.6.1 2024-01-23 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { hashNotDeserialized } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nfunction stripLeadingHashOrQuery(responseString) {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    }\n    else if (responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")) {\n        return responseString.substring(1);\n    }\n    return responseString;\n}\n/**\n * Returns URL hash as server auth code response object.\n */\nfunction getDeserializedResponse(responseString) {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\n        // Check for known response properties\n        if (deserializedHash.code ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state) {\n            return deserializedHash;\n        }\n    }\n    catch (e) {\n        throw createClientAuthError(hashNotDeserialized);\n    }\n    return null;\n}\n\nexport { getDeserializedResponse, stripLeadingHashOrQuery };\n//# sourceMappingURL=UrlUtils.mjs.map\n"],"names":["createClientAuthError","hashNotDeserialized"],"mappings":";;;;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,cAAc,EAAE;AACjD,IAAI,IAAI,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACzC,QAAQ,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3C,KAAK;AACL,SAAS,IAAI,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC;AAC3C,QAAQ,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACxC,QAAQ,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3C,KAAK;AACL,IAAI,OAAO,cAAc,CAAC;AAC1B,CAAC;AACD;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,cAAc,EAAE;AACjD;AACA,IAAI,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC5D,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,IAAI;AACR;AACA,QAAQ,MAAM,kBAAkB,GAAG,uBAAuB,CAAC,cAAc,CAAC,CAAC;AAC3E;AACA,QAAQ,MAAM,gBAAgB,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,eAAe,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7F;AACA,QAAQ,IAAI,gBAAgB,CAAC,IAAI;AACjC,YAAY,gBAAgB,CAAC,KAAK;AAClC,YAAY,gBAAgB,CAAC,iBAAiB;AAC9C,YAAY,gBAAgB,CAAC,KAAK,EAAE;AACpC,YAAY,OAAO,gBAAgB,CAAC;AACpC,SAAS;AACT,KAAK;AACL,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,MAAMA,qCAAqB,CAACC,wCAAmB,CAAC,CAAC;AACzD,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB;;;;;","x_google_ignoreList":[0]}