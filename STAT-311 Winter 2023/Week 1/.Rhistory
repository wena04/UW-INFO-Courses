# Consider the following (fictional) data consisting of a population
#  of students at a local highschool.
students<-read.csv('artificialStudentData.csv')
# Consider the following (fictional) data consisting of a population
#  of students at a local highschool.
students<-read.csv('artificialStudentData.csv')
## ## ## ## ## DO NOT MODIFY BELOW ## ## ## ## ##
library(usdata)
county<-as.data.frame(county)
county<-county[!is.na(county$median_edu),]
# The set.seed command will ensure your results are consistent
#  each time you run the "source" command
set.seed(311)
## ## ## ## ## DO NOT MODIFY ABOVE ## ## ## ## ##
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.SRS" that represents a simple
#  random sample of n=250 individual counties from all counties in the US.
my.SRS <- sample(county,250)
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.SRS" that represents a simple
#  random sample of n=250 individual counties from all counties in the US.
numC <- dim(county)
numC
my.SRS <- sample(county,250,TRUE)
numSRS <- dim(my.SRS)
my.SRS
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.SRS" that represents a simple
#  random sample of n=250 individual counties from all counties in the US.
?county
# You will be using the "usdata" package's "county" data
#  for this assignment.
# You will need to run:
#  install.packages("usdata")
# once to install this library - do not include the
#  install.packages command in your submission
## ## ## ## ## DO NOT MODIFY BELOW ## ## ## ## ##
library(usdata)
county<-as.data.frame(county)
county<-county[!is.na(county$median_edu),]
# The set.seed command will ensure your results are consistent
#  each time you run the "source" command
set.seed(311)
## ## ## ## ## DO NOT MODIFY ABOVE ## ## ## ## ##
my.SRS <- sample(county,250)
my.SRS <- sample(county,250,FALSE)
my.SRS <- sample(county,250,TRUE)
View(my.SRS)
my.SRS <- sample(250,county)
my.SRS <- sample(county,250,TRUE)
my.SRS <- sample(1:county,250)
my.SRS <- sample(county,250)
(county,250,TRUE)
my.Stratified <- unique(country$median_edu)
my.Stratified <- unique(county$median_edu)
my.Stratified
my.Stratified[1]
dim(my.Stratified[4])
my.Stratified[4]
my.Stratified[4]
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.Stratified" that represents a stratified
#  sample of individual counties from all counties in the US, statified
#  along the level of education (median_edu). Due to the different sizes of strata,
#  you should sample:
#  1 county from "below_hs", 14 from "hs_diploma", 17 from "some_college"
#  and 4 from "bachelors"
table(county$median_edu)
below_tf <- (county$median_edu==county$median_edu[4])
below <- (county[below_tf,])
below <- (county[county$median_edu==county$median_edu[4],])
county$median_edu[2]
county$median_edu[1]
county$median_edu[1]
county$median_edu[2]
county$median_edu[3]
county$median_edu[4]
county$median_edu[5]
my.Stratified
below <- (county[county$median_edu=="below_hs",])
diploma <- (county[county$median_edu=="hs_diploma",])
college <- (county[county$median_edu=="some_college",])
bach <- (county[county$median_edu=="bachelors",])
dim(below)
dim(diploma)
dim(college)
dim(bach)
below
below$median_edu
table(below$median_edu)
#The numbers here should match those specified above
table(my.Stratified$median_edu)
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.Stratified" that represents a stratified
#  sample of individual counties from all counties in the US, statified
#  along the level of education (median_edu). Due to the different sizes of strata,
#  you should sample:
#  1 county from "below_hs", 14 from "hs_diploma", 17 from "some_college"
#  and 4 from "bachelors"
table(county$median_edu)
table(below,diploma,college,bach)
my.Stratified <- rbind(rbelow,rdiploma,rcollege,rbach)
rbelow <- sample(below,1)
rdiploma <- sample(diploma,14)
rcollege <- sample(college,17)
rbelow <- sample(below,1,TRUE)
rdiploma <- sample(diploma,14,TRUE)
rcollege <- sample(college,17,TRUE)
rbach <- sample(bach,4,TRUE)
my.Stratified <- rbind(rbelow,rdiploma,rcollege,rbach)
dim(below)
below <- (county[county$median_edu=="below_hs"])
dim(county)
# The dim command can show us how much data we have in total
#  by showing the data frame dimension, number of rows then columns
dim(students)
# Consider the following (fictional) data consisting of a population
#  of students at a local highschool.
students<-read.csv('artificialStudentData.csv')
# The dim command can show us how much data we have in total
#  by showing the data frame dimension, number of rows then columns
dim(students)
my.Stratified <- rbind(rbelow,rdiploma,rcollege,rbach)
dim(below)
my.Stratified <- rbind(below,diploma,college,bach)
#The numbers here should match those specified above
table(my.Stratified$median_edu)
diploma <- (county[dim(county$median_edu=="hs_diploma")[1],])
rdiploma <- sample(diploma,14)
diploma <- (county[county$median_edu=="hs_diploma",])
rdiploma <- sample(diploma,14)
my.Stratified <- rbind(rbelow,rdiploma,rcollege,rbach)
rbelow <- sample(below,1,TRUE)
below <- (county[dim(county$median_edu=="below_hs")[1],])
rbelow <- sample(below,1,TRUE)
below <- (county[dim(county$median_edu=="below_hs")[1],])
diploma <- (county[dim(county$median_edu=="hs_diploma")[1],])
college <- (county[dim(county$median_edu=="some_college")[1],])
bach <- (county[dim(county$median_edu=="bachelors")[1],])
rbelow <- sample(below,1)
rdiploma <- sample(diploma,14)
rcollege <- sample(college,17)
my.Stratified <- rbind(rbelow,rdiploma,rcollege,rbach)
my.Stratified
#The numbers here should match those specified above
table(my.Stratified$median_edu)
# Treating the "county" dataset as the population of US counties
#  create the dataframe "my.Stratified" that represents a stratified
#  sample of individual counties from all counties in the US, statified
#  along the level of education (median_edu). Due to the different sizes of strata,
#  you should sample:
#  1 county from "below_hs", 14 from "hs_diploma", 17 from "some_college"
#  and 4 from "bachelors"
table(county$median_edu)
dim(county$state)
dim(county$state)[1]
county$state
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
dim(unique(county$state))[1]
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
dim(county&state_stats)[1]
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
dim(county&state.name)[1]
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
dim(county&state.name)[1]
$county
?county
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
county$state
# Treating the "county" variable as a population of US counties
#  create the dataframe "my.Clustered" that represents a cluster
#  sample of individual counties from all counties in the US, clustered by state.
#  You should randomly sample counties from a total of 5 clusters.
unique(county$state)
clusters = sample(unique(county$state),10)
